#!/bin/sh

display_help() {
  echo "Usage: $0 --network-folder [network folder]" >&2
  echo
  echo "   -n, --network-folder        Network folder to use"
  echo
  exit 1
}

################################
# Check if parameters options  #
# are given on the commandline #
################################
while :; do
  case "$1" in
  -h | --help)
    display_help # Call your function
    exit 0
    ;;
  -n | --network-folder)
    network_folder="$2"
    shift 2
    ;;

  --) # End of all options
    shift
    break
    ;;
  -*)
    echo "Error: Unknown option: $1" >&2
    display_help
    exit 1
    ;;
  *) # No more options
    break
    ;;
  esac
done

PRJT_ROOT="$( cd "$(dirname "$0")" >/dev/null 2>&1 || exit 1 ; pwd -P | grep -o '^.*/' )"

NETWORK_FOLDER_DEFAULT="${PRJT_ROOT}/../../../../networks/local"
NETWORK_FOLDER=$(realpath "${network_folder:-$NETWORK_FOLDER_DEFAULT}")
KEYS_FILE="${NETWORK_FOLDER}/tezos/keys.json"
NODE_FILE="${NETWORK_FOLDER}/tezos/node.json"

echo "ðŸ”Ž Using network folder $NETWORK_FOLDER. Looking for config"

if [ ! -d "$NETWORK_FOLDER" ]; then
  echo "ðŸ’¥ Directory $NETWORK_FOLDER not found"
  exit 1
fi

if [ ! -f "$KEYS_FILE" ]; then
  echo "ðŸ’¥ Keys file $KEYS_FILE not found"
  exit 1
fi

if [ ! -f "$NODE_FILE" ]; then
  echo "ðŸ’¥ Node file $NODE_FILE not found"
  exit 1
fi

echo "âœ… Config files found"

# Compile and Deploy factory

echo "ðŸ›  Building contracts"

if npm run build
then
    echo "âœ… Contracts built"
else
    echo "ðŸ’¥ Error during contract build"
    exit 1
fi

echo "ðŸ›  Distribute Tez if needed "

if npm run activate -- --network-folder="$NETWORK_FOLDER"
then
    echo "âœ… Tez distributed"
else
    echo "ðŸ’¥ Error distributing tez"
    exit 1
fi

echo "ðŸ›  Deploying contracts"


if npm run originate -- --network-folder="$NETWORK_FOLDER"
then
    echo "âœ… Contracts deployed"
else
    echo "ðŸ’¥ Error during contract deployment"
    exit 1
fi

echo "ðŸŽŠ All done !"
